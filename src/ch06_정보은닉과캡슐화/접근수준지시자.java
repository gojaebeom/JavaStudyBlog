package ch06_정보은닉과캡슐화;

public class 접근수준지시자 {

	/**
	 * 앞의 예제에서 인스턴스 변수를 대상으로 private 선언을 하였는데, 이러한 유형의 키워드를 가리켜 
	 * '접근 수준 지시자 (Access-level Modifiers)' 라 한다. 또는 '접근 제한자' 라고도 한다.
	 * 이름 그대로 접근의 허용 수준을 결정할 때 선언하는 키워드이다.
	 * 
	 * 접근제한자의 종류는 다음과 같이 4가지 이다.
	 * 
	 * public , protected, private, default
	 * 
	 * 이중에서 default는 키워드가 아닌, 아무런 선언도 하지 않은 상황을 의미한다.
	 * 비록 이는 키워드가 아닌 일종의 상황이지만 이 역시 접근 제한자의 한 종류로 구분을 한다. 
	 * 그리고 이러한 선언을 할 수 있는 대상은 다음 두 가지이다.
	 * 
	 * - 클래스의 정의
	 * - 클래스의 인스턴스 변수와 메소드
	 * 
	 * 클래스의 정의를 대상으로는 다음 두 가지 선언이 가능하다.
	 * 
	 * 클래스 정의대상 : public ,default
	 * 
	 * 그리고 인스턴스 변수와 메소드를 대상으로는 다음 네 가지 선언이 모두 가능하다.
	 * 
	 * public, protected, private, default
	 * 
	 * 그럼 이제 각각의 기능을 알아보자. 
	 * 
	 */
	
	/**
	 * @클래스 정의 대상의 public 과 default 선언이 갖는 의미
	 * 
	 * - public : 어디서든 인스턴스(객체) 생성이 가능하다. 
	 * - default : 동일 패키지로 묶인 클래스 내에서만 인스턴스 생성을 허용한다.
	 */
	
	/**
	 * @인스턴스 멤버 대상의 public , protected, private, default 선언이 갖는 의미
	 * 
	 *  접근제한자 |   클래스 내부  |  동일 패키지  |  상속 받은 클래스  |  이외의 영역
	 *  --------------------------------------------------------------------------------
	 *    private  |        o       |        x      |         x          |       x
	 *  --------------------------------------------------------------------------------
	 *    default  |        o       |        o      |         x          |       x
	 *  --------------------------------------------------------------------------------
	 *   protected |        o       |        o      |         o          |       x
	 *  --------------------------------------------------------------------------------
	 *    public   |        o       |        o      |         o          |       o 
	 *    
	 *  위의 표에서 말하는 이외의 영역은 다른 패키지에 속한 클래스를 뜻한다. 
	 *  즉 서로 다른 패키지에 속한 두 클래스 사이의 접근을 의미한다. 그리고 위 표의 내용을 기준으로 접근 허용 범위에 대하여
	 *  다음과 같이 이해하고 있는 것도 도움이 된다. 
	 *  
	 *  public >  protected > default > private
	 */
}
